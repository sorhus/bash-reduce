#!/bin/bash

function usage() {
  printf "%s\n%s\n" \
      "Usage: run-all [-m mode]" \
      "Only (s)equential and (l)ocal available. Defaults to sequential."
  exit 1
}

mode="s"

while getopts hm: OPTION; do
    case "$OPTION" in
        h)  usage
            ;;
        m)  if [[ $OPTARG == "s" || $OPTARG == "sequential" ]]; then
                mode="s"
            elif [[ $OPTARG == "l" || $OPTARG == "local" ]]; then
                mode="l"
            else
                usage
            fi
            ;;
        ?)  usage
            ;;
   esac
done
shift $(($OPTIND - 1))

# Clean up old diffs
stat *.diff &> /dev/null && ls -1 *.diff | xargs rm

GREEN="\e[0;32m"
RED="\e[0;31m"
END="\e[0m"

BASE=$(pwd)
TESTS=$(ls -d */)
FAILED=0
cd ..

printf "%s\n\n" "Running all tests"

for TEST in $TESTS; do
    DIR=$BASE/$TEST
    SETUP=$(<$DIR/setup)
    printf "  * running test ${TEST%/}: "
    ./bash-reduce -m $mode $SETUP $DIR/input > $DIR/result 2> /dev/null
    diff $DIR/result $DIR/expected > /dev/null
    if [[ $? -eq 0 ]]; then
        printf "${GREEN}passed${END}!\n"
    else
        diff $DIR/result $DIR/expected > "$BASE/${TEST%/}.diff"
        printf "${RED}failed${END}\n"
        FAILED=$((FAILED+1))
    fi
    rm $DIR/result
done

if [[ $FAILED -eq 0 ]]; then
    printf "\nAll tests ${GREEN}PASSED${END}!\n"
else
    printf "\n$FAILED test(s) ${RED}FAILED${END}! read diff file for more info.\n"
fi
